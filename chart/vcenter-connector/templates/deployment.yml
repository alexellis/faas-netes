apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    # Original Helm labels v
    app: {{ template "connector.name" . }}
    component: vcenter-connector
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    # Helm/k8s recommended label names v
    app.kubernetes.io/name: {{ template "connector.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: vcenter-connector
    app.kubernetes.io/part-of: openfaas
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  name: {{ template "connector.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "connector.name" . }}
      component: vcenter-connector
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "false"
      labels:
        app: {{ template "connector.name" . }}
        component: vcenter-connector
    spec:
      volumes:
        - name: auth-secrets-projected
          projected:
            defaultMode: 420
            sources:
            {{- if .Values.basic_auth }}
            - secret:
                items:
                  - key: basic-auth-user
                    path: basic-auth-user
                  - key: basic-auth-password
                    path: basic-auth-password
                name: basic-auth
            {{- end }}
            - secret:
                items:
                  - key: vcenter-username
                    path: vcenter-username
                  - key: vcenter-password
                    path: vcenter-password
                name: {{ .Values.vc_k8s_secret | quote }}
      containers:
        - name: vcenter
          image: {{ .Values.image }}
          resources:
            {{- .Values.resources | toYaml | nindent 12 }}
          command: ["./connector"]
          args:
          {{- range $key, $value := .Values.extraArgs }}
              {{- if $value }}
              - --{{ $key }}={{ $value }}
              {{- else }}
              - --{{ $key }}
              {{- end }}
          {{- end }}
          env:
            - name: gateway_url
              value: {{ .Values.extraArgs.gateway | quote }}
            - name: print_response
              value: {{ .Values.print_response | quote }}
            - name: print_response_body
              value: {{ .Values.print_response_body | quote }}
            - name: secret_mount_path
              value: {{ .Values.secret_mount | quote }}
            {{- if .Values.basic_auth }}
            - name: basic_auth
              value: "true"
            {{- end }}
            {{- if .Values.upstream_timeout }}
            - name: upstream_timeout
              value: {{ .Values.upstream_timeout | quote }}
            {{- end }}
            {{- if .Values.rebuild_interval }}
            - name: rebuild_interval
              value: {{ .Values.rebuild_interval | quote }}
            {{- end }}
          volumeMounts:
            - name: auth-secrets-projected
              readOnly: true
              mountPath: "/var/openfaas/secrets/"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
